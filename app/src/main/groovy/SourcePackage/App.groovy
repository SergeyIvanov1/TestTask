/*
 * This Groovy source file was generated by the Gradle 'init' task.
 */
package SourcePackage

import java.util.stream.Collectors

class App {

    static void main(String[] args) {

        println countNumberOfElements(args)
    }

/**
 * This method counts the elements of the specified list.
 * The Map relies on the equals() and Hash code() methods to compare its keys and values.
 *
 * @param list list of elements
 * @return a Map containing the elements of this list as key and amount of elements as value
 * @param <E>  type elements of list.
 * @throws NullPointerException – if the specified list is null
 */
    static <E> Map<E, Integer> countNumberOfElements(List<E> list) {
        Objects.requireNonNull(list);
        return list.stream()
                .collect(Collectors.toMap(
                        key -> key,
                        value -> 1,
                        Integer::sum))
    }

/**
 * This method counts the elements of the specified array.
 * The Map relies on the equals() and Hash code() methods to compare its keys and values.
 * @param <E>  type elements of array
 * @param array array of elements
 * @return a Map containing the elements of this list as key and amount of this elements as value
 * @throws NullPointerException – if the specified array is null
 */
    static <E> Map<E, Integer> countNumberOfElements(E[] array) {
        return countNumberOfElements(Arrays.asList(array));
    }
}
